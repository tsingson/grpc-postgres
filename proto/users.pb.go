// Code generated by protoc-gen-go. DO NOT EDIT.
// source: users.proto

package users

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Role int32

const (
	Role_GUEST  Role = 0
	Role_MEMBER Role = 1
	Role_ADMIN  Role = 2
)

var Role_name = map[int32]string{
	0: "GUEST",
	1: "MEMBER",
	2: "ADMIN",
}

var Role_value = map[string]int32{
	"GUEST":  0,
	"MEMBER": 1,
	"ADMIN":  2,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}

func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{0}
}

type User struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName             string               `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	Role                 Role                 `protobuf:"varint,3,opt,name=role,proto3,enum=users.Role" json:"role,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *User) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_GUEST
}

func (m *User) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

type UserRole struct {
	Role                 Role     `protobuf:"varint,1,opt,name=role,proto3,enum=users.Role" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRole) Reset()         { *m = UserRole{} }
func (m *UserRole) String() string { return proto.CompactTextString(m) }
func (*UserRole) ProtoMessage()    {}
func (*UserRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{1}
}

func (m *UserRole) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRole.Unmarshal(m, b)
}
func (m *UserRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRole.Marshal(b, m, deterministic)
}
func (m *UserRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRole.Merge(m, src)
}
func (m *UserRole) XXX_Size() int {
	return xxx_messageInfo_UserRole.Size(m)
}
func (m *UserRole) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRole.DiscardUnknown(m)
}

var xxx_messageInfo_UserRole proto.InternalMessageInfo

func (m *UserRole) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_GUEST
}

type AddUserRequest struct {
	Role                 Role     `protobuf:"varint,1,opt,name=role,proto3,enum=users.Role" json:"role,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserRequest) Reset()         { *m = AddUserRequest{} }
func (m *AddUserRequest) String() string { return proto.CompactTextString(m) }
func (*AddUserRequest) ProtoMessage()    {}
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{2}
}

func (m *AddUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserRequest.Unmarshal(m, b)
}
func (m *AddUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserRequest.Marshal(b, m, deterministic)
}
func (m *AddUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserRequest.Merge(m, src)
}
func (m *AddUserRequest) XXX_Size() int {
	return xxx_messageInfo_AddUserRequest.Size(m)
}
func (m *AddUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserRequest proto.InternalMessageInfo

func (m *AddUserRequest) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_GUEST
}

func (m *AddUserRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type DeleteUserRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteUserRequest) Reset()         { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()    {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{3}
}

func (m *DeleteUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteUserRequest.Unmarshal(m, b)
}
func (m *DeleteUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteUserRequest.Marshal(b, m, deterministic)
}
func (m *DeleteUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteUserRequest.Merge(m, src)
}
func (m *DeleteUserRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteUserRequest.Size(m)
}
func (m *DeleteUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteUserRequest proto.InternalMessageInfo

func (m *DeleteUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListUsersRequest struct {
	// Only list users created after this timestamp
	CreatedSince *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_since,json=createdSince,proto3" json:"created_since,omitempty"`
	// Only list users older than this Duration
	OlderThan            *duration.Duration `protobuf:"bytes,2,opt,name=older_than,json=olderThan,proto3" json:"older_than,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListUsersRequest) Reset()         { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()    {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{4}
}

func (m *ListUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersRequest.Unmarshal(m, b)
}
func (m *ListUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersRequest.Marshal(b, m, deterministic)
}
func (m *ListUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRequest.Merge(m, src)
}
func (m *ListUsersRequest) XXX_Size() int {
	return xxx_messageInfo_ListUsersRequest.Size(m)
}
func (m *ListUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRequest proto.InternalMessageInfo

func (m *ListUsersRequest) GetCreatedSince() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedSince
	}
	return nil
}

func (m *ListUsersRequest) GetOlderThan() *duration.Duration {
	if m != nil {
		return m.OlderThan
	}
	return nil
}

func init() {
	proto.RegisterEnum("users.Role", Role_name, Role_value)
	proto.RegisterType((*User)(nil), "users.User")
	proto.RegisterType((*UserRole)(nil), "users.UserRole")
	proto.RegisterType((*AddUserRequest)(nil), "users.AddUserRequest")
	proto.RegisterType((*DeleteUserRequest)(nil), "users.DeleteUserRequest")
	proto.RegisterType((*ListUsersRequest)(nil), "users.ListUsersRequest")
}

func init() { proto.RegisterFile("users.proto", fileDescriptor_030765f334c86cea) }

var fileDescriptor_030765f334c86cea = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x41, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x77, 0x6a, 0x77, 0xdd, 0xbe, 0x68, 0xa9, 0x03, 0x62, 0xcc, 0xc1, 0x2d, 0xf1, 0x52,
	0x94, 0x4d, 0xa4, 0x22, 0x08, 0x7b, 0x90, 0x5d, 0x5a, 0x44, 0x30, 0x7b, 0x48, 0xbb, 0x17, 0x2f,
	0x25, 0x4d, 0x9e, 0xe9, 0x40, 0x92, 0x89, 0x33, 0x13, 0xbf, 0x85, 0xe0, 0x07, 0xf1, 0x43, 0xca,
	0xcc, 0x24, 0x55, 0x53, 0xec, 0x1e, 0xdf, 0x7b, 0xff, 0xff, 0xbc, 0xff, 0xfb, 0x25, 0xe0, 0x34,
	0x12, 0x85, 0x0c, 0x6a, 0xc1, 0x15, 0xa7, 0xa7, 0xa6, 0xf0, 0x2e, 0x72, 0xce, 0xf3, 0x02, 0x43,
	0xd3, 0xdc, 0x36, 0x5f, 0x43, 0xc5, 0x4a, 0x94, 0x2a, 0x29, 0x6b, 0xab, 0xf3, 0x5e, 0xf4, 0x05,
	0x59, 0x23, 0x12, 0xc5, 0x78, 0x65, 0xe7, 0xfe, 0x4f, 0x02, 0xc3, 0x3b, 0x89, 0x82, 0x8e, 0x61,
	0xc0, 0x32, 0x97, 0x4c, 0xc9, 0x6c, 0x14, 0x0f, 0x58, 0x46, 0x3d, 0x38, 0xd7, 0x2b, 0x6e, 0x93,
	0x12, 0xdd, 0x81, 0xe9, 0xee, 0x6b, 0x7a, 0x01, 0x43, 0xc1, 0x0b, 0x74, 0x1f, 0x4c, 0xc9, 0x6c,
	0x3c, 0x77, 0x02, 0x1b, 0x2c, 0xe6, 0x05, 0xc6, 0x66, 0x40, 0xaf, 0xc0, 0x49, 0x05, 0x26, 0x0a,
	0x37, 0x3a, 0x8f, 0x3b, 0x9c, 0x92, 0x99, 0x33, 0xf7, 0x02, 0x9b, 0x25, 0xe8, 0xb2, 0x04, 0xeb,
	0x2e, 0x6c, 0x0c, 0x56, 0xae, 0x1b, 0xfe, 0x6b, 0x38, 0xd7, 0x89, 0xf4, 0x73, 0xfb, 0x4d, 0xe4,
	0x3f, 0x9b, 0xfc, 0x08, 0xc6, 0xd7, 0x59, 0x66, 0xf4, 0xf8, 0xad, 0x41, 0xa9, 0xee, 0xb5, 0x1c,
	0xbb, 0xcc, 0x7f, 0x09, 0x4f, 0x16, 0x58, 0xa0, 0xc2, 0xbf, 0x5f, 0xec, 0xa1, 0xf1, 0x7f, 0x10,
	0x98, 0x7c, 0x66, 0x52, 0x69, 0x8d, 0xec, 0x44, 0x1f, 0xe0, 0xb1, 0xbd, 0x21, 0xdb, 0x48, 0x56,
	0xa5, 0x76, 0xff, 0xf1, 0xa3, 0x1f, 0xb5, 0x86, 0x95, 0xd6, 0xd3, 0xf7, 0x00, 0xbc, 0xc8, 0x50,
	0x6c, 0xd4, 0x2e, 0xa9, 0x4c, 0x30, 0x67, 0xfe, 0xfc, 0xc0, 0xbd, 0x68, 0x3f, 0x5f, 0x3c, 0x32,
	0xe2, 0xf5, 0x2e, 0xa9, 0x5e, 0xcd, 0x60, 0x68, 0x60, 0x8d, 0xe0, 0xf4, 0xe3, 0xdd, 0x72, 0xb5,
	0x9e, 0x9c, 0x50, 0x80, 0xb3, 0x68, 0x19, 0xdd, 0x2c, 0xe3, 0x09, 0xd1, 0xed, 0xeb, 0x45, 0xf4,
	0xe9, 0x76, 0x32, 0x98, 0xff, 0x22, 0xe0, 0xe8, 0xd4, 0x2b, 0x14, 0xdf, 0x59, 0x8a, 0x34, 0x84,
	0x87, 0x2d, 0x3d, 0xfa, 0xb4, 0x05, 0xf5, 0x2f, 0x4d, 0xaf, 0xe3, 0xa7, 0x7b, 0xfe, 0x09, 0x7d,
	0x07, 0xf0, 0x87, 0x0f, 0x75, 0xdb, 0xe1, 0x01, 0xb2, 0x43, 0xdb, 0x68, 0x0f, 0x8c, 0x3e, 0x6b,
	0x67, 0x7d, 0x84, 0x3d, 0xd3, 0x1b, 0x72, 0x13, 0x7e, 0xb9, 0xcc, 0x99, 0xda, 0x35, 0xdb, 0x20,
	0xe5, 0x65, 0xa8, 0x24, 0xab, 0x72, 0xc9, 0xab, 0x30, 0x17, 0x75, 0x7a, 0x59, 0x73, 0xa9, 0x72,
	0x81, 0xd2, 0xfe, 0xd9, 0x57, 0xc6, 0xb9, 0x3d, 0x33, 0xc5, 0xdb, 0xdf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x75, 0x4a, 0x63, 0xac, 0x2b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*User, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*User, error)
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (UserService_ListUsersClient, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/users.UserService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/users.UserService/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (UserService_ListUsersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserService_serviceDesc.Streams[0], "/users.UserService/ListUsers", opts...)
	if err != nil {
		return nil, err
	}
	x := &userServiceListUsersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserService_ListUsersClient interface {
	Recv() (*User, error)
	grpc.ClientStream
}

type userServiceListUsersClient struct {
	grpc.ClientStream
}

func (x *userServiceListUsersClient) Recv() (*User, error) {
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	AddUser(context.Context, *AddUserRequest) (*User, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*User, error)
	ListUsers(*ListUsersRequest, UserService_ListUsersServer) error
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UserService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AddUser(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UserService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ListUsers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListUsersRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserServiceServer).ListUsers(m, &userServiceListUsersServer{stream})
}

type UserService_ListUsersServer interface {
	Send(*User) error
	grpc.ServerStream
}

type userServiceListUsersServer struct {
	grpc.ServerStream
}

func (x *userServiceListUsersServer) Send(m *User) error {
	return x.ServerStream.SendMsg(m)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "users.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddUser",
			Handler:    _UserService_AddUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserService_DeleteUser_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListUsers",
			Handler:       _UserService_ListUsers_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "users.proto",
}
